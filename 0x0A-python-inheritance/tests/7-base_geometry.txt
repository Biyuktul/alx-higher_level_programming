>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

# Test case 1: Functionality test
>>> bg.integer_validator("my_int", 12)

# Test case 2: string value passed
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
...
TypeError: name must be an integer

# Test case 3: value == 0
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

# Test case 4: positional argument missing
>>> bg.integer_validator("height")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

# Test case 5: passing negative number
>>> bg.integer_validator("height", -5)
Traceback (most recent call last):
...
ValueError: height must be greater than 0

# Test case 6: calling area method on the instance
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

# Test case 7: boolean passed
>>> bg.integer_validator("yon", True)
Traceback (most recent call last):
...
TypeError: yon must be an integer

# Test case 8: area with parameter
>>> bg.area(12)
Traceback (most recent call last):
...
TypeError: BaseGeometry.area() takes 1 positional argument but 2 were given

 # Test 9: no positional argument
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'