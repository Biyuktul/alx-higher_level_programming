>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

# ***********************************************************
# Functionality test                                        *
# ***********************************************************

>>> matrix = [
...    [1, 2, 3],
...    [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]


>>> matrix = [
...    [1]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33]]


>>> matrix = [
...    []
... ]
>>> print(matrix_divided(matrix, 3))
[[]]


>>> matrix = [
...    [1.23, 2.5, 3.2],
...    [4.34, 5.4, 10.1]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.41, 0.83, 1.07], [1.45, 1.8, 3.37]]


>>> matrix = [
...    [1, 2.5, 3.2],
...    [4, 5, 10.1]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.83, 1.07], [1.33, 1.67, 3.37]]


>>> matrix = [
...    [1, 2, 3],
...    [4, 5, float('nan')]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, nan]]




# ***********************************************************
# Invalid values test                                       *
# ***********************************************************

>>> matrix = [
...    [1, 2, 3],
...    [4, 5, 'a']
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix = [
...    [1, 2, 3],
...    [4, 5, '10']
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix = [
...    [1, 2, 3],
...    [4, 5, None]
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix = 100
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix = [
...    [1, 2, 3],
...    [4, 5, 2, 5]
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size


>>> matrix = []
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
...
IndexError: list index out of range




# ***********************************************************
# Zero division test                                        *
# ***********************************************************

>>> matrix = [
...    [1, 2, 3],
...    [4, 5, 2]
... ]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
...
ZeroDivisionError: division by  zero




# ***********************************************************
# Invalid divider value test                                *
# ***********************************************************

>>> matrix = [
...    [1, 2, 3],
...    [4, 5, 2]
... ]
>>> print(matrix_divided(matrix, 'a'))
Traceback (most recent call last):
...
TypeError: div must be a number




# ***********************************************************
# Missing positional arguments test                         *
# ***********************************************************

>>> print(matrix_divided())
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'


>>> matrix = [
...    [1, 2, 3],
...    [4, 5, 2]
... ]
>>> print(matrix_divided(matrix))
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
